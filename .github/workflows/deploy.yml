# SPDX-FileCopyrightText: 2024 Pablo Portas L√≥pez <pablo.portas@udc.es>
#
# SPDX-License-Identifier: GPL-3.0-only AND MIT AND Apache-2.0

name: üöÄ Despliegue documentaci√≥n

on:
  push:
    paths: ["docs/**"]
    branches: ["main"]
  workflow_dispatch:

permissions:
  id-token: write
  pages: write

env:
  INSTANCE: 'docs/pro'
  ARTIFACT: 'webHelpPRO2-all.zip'
  DOCKER_VERSION: '243.21565'
  ALGOLIA_ARTIFACT: 'algolia-indexes-PRO.zip'
  ALGOLIA_APP_NAME: '0K3UBN277V'
  ALGOLIA_INDEX_NAME: 'pro2324'
  ALGOLIA_KEY: '${{ secrets.ALGOLIA_KEY }}'
  CONFIG_JSON_PRODUCT: 'PRO'
  CONFIG_JSON_VERSION: '1.0'

jobs:
  construir:
    name: üì¶ Construir
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Checkout repositorio
        # GitHub Actions
        # MIT
        # https://github.com/actions/checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: üèóÔ∏è Construir con Writerside usando Docker
        # JetBrains Open Source
        # Apache-2.0
        # https://github.com/JetBrains/writerside-github-action
        uses: JetBrains/writerside-github-action@v4
        with:
          instance: ${{ env.INSTANCE }}
          artifact: ${{ env.ARTIFACT }}
          docker-version: ${{ env.DOCKER_VERSION }}

      - name: ‚¨ÜÔ∏è Subir artefacto con los resultados de la construcci√≥n
        uses: actions/upload-artifact@v4
        # GitHub Actions
        # MIT
        # https://github.com/actions/upload-artifact
        with:
          name: docs
          path: |
            artifacts/${{ env.ARTIFACT }}
            artifacts/report.json
            artifacts/${{ env.ALGOLIA_ARTIFACT }}
          retention-days: 7

  comprobar:
    name: üìä Comprobar
    needs: construir
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Descargar artefactos
        # GitHub Actions
        # MIT
        # https://github.com/actions/download-artifact
        uses: actions/download-artifact@v4
        with:
          name: docs
          path: artifacts

      - name: üìä Comprobar documentaci√≥n
        # JetBrains Open Source
        # Apache-2.0
        # https://github.com/JetBrains/writerside-checker-action
        uses: JetBrains/writerside-checker-action@v1
        with:
          instance: ${{ env.INSTANCE }}
  
  publicar:
    name: üåê Publicar Web
    if: github.repository == 'TeenBiscuits/Pro2324'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    needs: [construir, comprobar]
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨áÔ∏è Descargar artefacto
        # GitHub Actions
        # MIT
        # https://github.com/actions/download-artifact
        uses: actions/download-artifact@v4
        with:
          name: docs

      - name: üóÉÔ∏è Descomprimir artefacto
        run: unzip -O UTF-8 -qq '${{ env.ARTIFACT }}' -d dir

      - name: üîé Configurar IndexNow
        run: echo ${{ secrets.INDEXNOW_KEY }} > dir/${{ secrets.INDEXNOW_KEY }}.txt

      - name: üíÖ Archivos personalizados
        run: |
          curl https://raw.githubusercontent.com/TeenBiscuits/Pro2324/main/docs/cfg/robots.txt -o dir/robots.txt && \
          curl https://raw.githubusercontent.com/TeenBiscuits/Pro2324/main/docs/cfg/humans.txt -o dir/humans.txt
      
      - name: üî© Configurar Pages
        uses: actions/configure-pages@v5

      - name: üì¶ Empaquetar y subir artefacto de Pages
        uses: actions/upload-pages-artifact@v3
        with:
          path: dir

      - name: üìñ Implementar en GitHub Pages
        # GitHub Actions
        # MIT
        # https://github.com/actions/deploy-pages
        id: deployment
        uses: actions/deploy-pages@v4

  publicar-indexes:
    name: üîé Algolia Index
    if: github.repository == 'TeenBiscuits/Pro2324'
    needs: [construir, comprobar, publicar]
    runs-on: ubuntu-latest
    container:
      image: registry.jetbrains.team/p/writerside/builder/algolia-publisher:2.0.32-3
    steps:
      - name: ‚¨áÔ∏è Descargar artefacto
        # GitHub Actions
        # MIT
        # https://github.com/actions/download-artifact
        uses: actions/download-artifact@v4
        with:
          name: docs
      - name: üóÉÔ∏è Descomprimir artefacto
        run: |
          unzip -O UTF-8 -qq '${{ env.ALGOLIA_ARTIFACT }}' -d algolia-indexes
          env algolia-key='${{env.ALGOLIA_KEY}}' java -jar /opt/builder/help-publication-agent.jar \
          update-index \
          --application-name '${{env.ALGOLIA_APP_NAME}}' \
          --index-name '${{env.ALGOLIA_INDEX_NAME}}' \
          --product '${{env.CONFIG_JSON_PRODUCT}}' \
          --version '${{env.CONFIG_JSON_VERSION}}' \
          --index-directory algolia-indexes/ \
          2>&1 | tee algolia-update-index-log.txt

  indexnow:
    needs: [construir, comprobar, publicar]
    name: üîé Bing IndexNow
    if: github.repository == 'TeenBiscuits/Pro2324'
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨ÜÔ∏è Subir Sitemap
        # Bojie Yang
        # MIT
        # https://github.com/bojieyang/indexnow-action
        uses: bojieyang/indexnow-action@v2
        with:
          sitemap-location: 'https://pro2324.pablopl.dev/sitemap.xml'
          key: ${{ secrets.INDEXNOW_KEY }}
          key-location: 'https://pro2324.pablopl.dev/${{ secrets.INDEXNOW_KEY }}.txt'
          endpoint: www.bing.com # Es el default
          failure-strategy: error

  google-indexing:
    needs: [construir, comprobar, publicar]
    name: üîé Google Index
    if: github.repository == 'TeenBiscuits/Pro2324'
    runs-on: ubuntu-latest
    steps:
      - name: ‚¨ÜÔ∏è Subir Urls
        # Robin Genz
        # MIT
        # https://github.com/robingenz/google-indexing-action
        uses: robingenz/action-google-indexing@v1.0.1
        with:
          siteUrl: 'pro2324.pablopl.dev'
          gcpServiceAccountKey: ${{ secrets.GCP_SA_KEY }}
